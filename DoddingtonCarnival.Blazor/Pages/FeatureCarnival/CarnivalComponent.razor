@using DoddingtonCarnival.Blazor.Services
@using DoddingtonCarnival.Blazor.Models
@using System.Globalization;

@inject CalendarService calendarService

<div class="row">
    @if (nextCarnival != null)
    {
        <div class="col-lg-6 col-12">
            <div class="card eventCard">
                <div class="card-header">
                    Official Schedule @nextCarnival.Value.ToString("yyyy", CultureInfo.InvariantCulture)
                </div>
                <div class="card-body">
                    <p class="eventHeading">@nextCarnival.Value.ToString("dddd dd MMMM yyyy", CultureInfo.InvariantCulture)</p>
                    <p>09:00 - <a href="/carnival/roadclosure">Road closure</a> through the village.</p>
                    <p>09:30 - Fancy Dress Competition.</p>
                    <p>10:30 - The start of the Carnival Parade.</p>
                    <p>12:00 - Anticipated end of the Carnival Parade.</p>
                    <p>12:30 - Road re-opens.</p>
                    <p>13:30 - Gates open to The Children's <a href="/sportsafternoon">Sports Afternoon</a>.</p>
                </div>

            </div>
        </div>
    }

    <div class="col-lg-6 col-12">
        <div class="card eventCard">
            <div class="card-header">
                Get Involved!
            </div>
            <div class="card-body">

                <p class="eventHeading">Have a Float in the Parade</p>
                <p>Big floats and little floats are welcome!</p>
                <p>Drop us a quick email to say that you're interested in a float, and we'll get in touch with how you get started and where to get the stuff from!</p>
            </div>

        </div>
    </div>
</div>


@code {
    DateTime? nextCarnival;

    protected override async Task OnInitializedAsync()
    {
        var nextCarnivalEvent = calendarService.GetAll("carnival-day").OrderBy(x => x.StartDateTime).FirstOrDefault();

        if (nextCarnivalEvent != null)
        {
            nextCarnival = nextCarnivalEvent.StartDateTime;
        }
    }
}